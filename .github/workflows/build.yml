# This is a basic workflow to help you get started with Actions

name: Build & Test Codebase

# Controls when the workflow will run
on:
  # Which branches to test on push/merge.
  push:
    branches:
      - next
      - dev
      - alpha
      - beta
      - rc
  # Which branches to test on pull request.
  pull_request:
    branches:
      - next
      - dev
      - alpha
      - beta
      - rc
      - /^issue/
      - /^task/
      - /^feature/
      - /^bug/

# The jobs for the build workflow.
jobs:
  # Basic setup job to prepare codebase.
  setup:
    name: Installation & Caching
    runs-on: ubuntu-latest
    container:
      image: node:14

    # The steps for the setup job.
    steps:
      # @see https://github.com/marketplace/actions/checkout
      - name: Checkout codebase
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install
        run: yarn install --prefer-offline

  debug:
    name: Debugging Information
    runs-on: ubuntu-latest
    container:
      image: node:14

    steps:
      - name: What environment variables are present?
        run: env
      - name: What (useful) GitHub variables are present?
        run: |
          echo github.action ${{ github.action }}
          echo github.ref ${{ github.ref }}
          echo github.head_ref ${{ github.head_ref }}
          echo github.job ${{ github.job }}
          echo github.run_id ${{ github.run_id }}
          echo github.workflow "${{ github.workflow }}"
          echo github.action ${{ github.action }}

  test:
    name: Testing & Linting
    runs-on: ubuntu-latest
    needs: setup
    container:
      image: node:14

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # @see https://github.com/marketplace/actions/checkout
      - name: Checkout codebase
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      # @see https://github.com/marketplace/actions/cache
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install from cache
        run: yarn install --prefer-offline

      - name: Lint
        run: yarn lint

  build-dist:
    name: Build Package(s)
    runs-on: ubuntu-latest
    needs: test
    container:
      image: node:14

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # @see https://github.com/marketplace/actions/checkout
      - name: Checkout codebase
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      # @see https://github.com/marketplace/actions/cache
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install from cache
        run: yarn install --prefer-offline

      - name: Build
        run: yarn build
  build-storybook:
    name: Build Storybook
    runs-on: ubuntu-latest
    needs: test
    container:
      image: node:14

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # @see https://github.com/marketplace/actions/checkout
      - name: Checkout codebase
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      # @see https://github.com/marketplace/actions/cache
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # @see https://github.com/marketplace/actions/cache
      - uses: actions/cache@v2
        id: storybook-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: storybook-static/
          key: ${{ runner.os }}-storybook-${{ hashFiles('./storybook-static/') }}
          restore-keys: |
            ${{ runner.os }}-storybook-

      - name: Install from cache
        run: yarn install --prefer-offline

      - name: Build Storybook
        run: yarn storybook.prod

  upload-storybook-artifact:
    name: Upload Storybook Artifact
    runs-on: ubuntu-latest
    needs: build-storybook
    container:
      image: node:14

    # Only perform the storybook upload if we are on the `next` branch.
    if: ${{ github.ref == 'refs/heads/next'}}
    steps:
      # @see https://github.com/marketplace/actions/cache
      - uses: actions/cache@v2
        id: storybook-cache # use this to check for `cache-hit` (`steps.build-storybook.outputs.cache-hit != 'true'`)
        with:
          path: storybook-static/
          key: ${{ runner.os }}-storybook-${{ hashFiles('./storybook-static/') }}
          restore-keys: |
            ${{ runner.os }}-storybook-

      # @see https://github.com/marketplace/actions/upload-a-build-artifact
      - name: Upload Storybook artifact
        uses: actions/upload-artifact@v2
        with:
          name: storybook-latest
          path: storybook-static/
          retention-days: 1
